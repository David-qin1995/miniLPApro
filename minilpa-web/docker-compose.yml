version: '3.8'

services:
  # MiniLPA Web 应用
  minilpa-web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: minilpa-web
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - CORS_ORIGIN=https://esim.haoyiseo.com
      - USE_MOCK_DATA=true
    volumes:
      # 持久化数据
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      # 环境变量文件
      - ./.env:/app/.env:ro
    networks:
      - minilpa-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: minilpa-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Nginx 配置
      - ./nginx-docker.conf:/etc/nginx/conf.d/default.conf:ro
      # 静态文件（可选，API 方式不需要）
      # - ./client/dist:/usr/share/nginx/html:ro
      # SSL 证书（如果有）
      # - ./ssl:/etc/nginx/ssl:ro
      # 日志
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - minilpa-web
    networks:
      - minilpa-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  minilpa-network:
    driver: bridge

